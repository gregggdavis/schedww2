<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbxErrorInfo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        0R4AAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAAACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAAAAAAAAAAAAAAAEAAAAB
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAMDcwADwyqYAAAA+AAAAXQAAAHwAAACbAAAA
        ugAAANkAAADwACQk/wBISP8AbGz/AJCQ/wC0tP8AABQ+AAAeXQAAKHwAADKbAAA8ugAARtkAAFXwACRt
        /wBIhf8AbJ3/AJC1/wC0zf8AACo+AAA/XQAAVHwAAGmbAAB+ugAAk9kAAKrwACS2/wBIwv8AbM7/AJDa
        /wC05v8AAD4+AABdXQAAfHwAAJubAAC6ugAA2dkAAPDwACT//wBI//8AbP//AJD//wC0//8AAD4qAABd
        PwAAfFQAAJtpAAC6fgAA2ZMAAPCqACT/tgBI/8IAbP/OAJD/2gC0/+YAAD4UAABdHgAAfCgAAJsyAAC6
        PAAA2UYAAPBVACT/bQBI/4UAbP+dAJD/tQC0/80AAD4AAABdAAAAfAAAAJsAAAC6AAAA2QAAAPAAACT/
        JABI/0gAbP9sAJD/kAC0/7QAFD4AAB5dAAAofAAAMpsAADy6AABG2QAAVfAAAG3/JACF/0gAnf9sALX/
        kADN/7QAKj4AAD9dAABUfAAAaZsAAH66AACT2QAAqvAAALb/JADC/0gAzv9sANr/kADm/7QAPj4AAF1d
        AAB8fAAAm5sAALq6AADZ2QAA8PAAAP//JAD//0gA//9sAP//kAD//7QAPioAAF0/AAB8VAAAm2kAALp+
        AADZkwAA8KoAAP+2JAD/wkgA/85sAP/akAD/5rQAPhQAAF0eAAB8KAAAmzIAALo8AADZRgAA8FUAAP9t
        JAD/hUgA/51sAP+1kAD/zbQAPgAAAF0AAAB8AAAAmwAAALoAAADZAAAA8AAAAP8kJAD/SEgA/2xsAP+Q
        kAD/tLQAPgAUAF0AHgB8ACgAmwAyALoAPADZAEYA8ABVAP8kbQD/SIUA/2ydAP+QtQD/tM0APgAqAF0A
        PwB8AFQAmwBpALoAfgDZAJMA8ACqAP8ktgD/SMIA/2zOAP+Q2gD/tOYAPgA+AF0AXQB8AHwAmwCbALoA
        ugDZANkA8ADwAP8k/wD/SP8A/2z/AP+Q/wD/tP8AKgA+AD8AXQBUAHwAaQCbAH4AugCTANkAqgDwALYk
        /wDCSP8Azmz/ANqQ/wDmtP8AFAA+AB4AXQAoAHwAMgCbADwAugBGANkAVQDwAG0k/wCFSP8AnWz/ALWQ
        /wDNtP8ABgYGABISEgAfHx8ALCwsADk5OQBFRUUAUlJSAF9fXwBsbGwAeHh4AIWFhQCSkpIAn5+fAKur
        qwC4uLgAxcXFANLS0gDe3t4A6+vrAPj4+ADw+/8ApKCgAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8A4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4oqKioqHh+Li4uLi4uLi4uLi4uLi
        4uLi4uLi4uLi4uLiio2NjY2NmJeHh4eH4uLi4uLi4uLi4uLi4uLi4uLi4uKKjY2NjY2NmYyMjJbi4uLi
        4uLi4uLi4uLi4uLi4uLi4oqNjY2NjY2Ni4uMl+Li4uLi4uLi4uLi4uLi4uLi4uLiivSNjY2NjYyKi4uW
        8eLi4uLi4uLi4uLi4uLi4uLi4uKK9PSNjY2NiYmYmZf/8fHi4uLi4uLi4uLi4uLi4uLi4or/9PSNjYuJ
        CQmMl/////Hx4uLi4uLi4uLi4uLi4uLiiv//9PSN6+LrlYaG///////x8eLi4uLi4uLi4uLi4uKK////
        9PSNMemYmZeVlf//8f//8fHi4uLi4uLi4uLi4or/////9PSNl5YJjZmYh4bx//////Hx4uLi4uLi4uLi
        iv//////9PSNmIeHmI2ZmOwN///////x8eLi4uLi4uKK////////9PSNjJeGh5eZDR0a8fH///H/8fHi
        4uLi4or/////////9PSMlv/xCZXmGv////Hx//////Hi4uLiiv//////////9I2X///x//Hx8f////Hx
        8f//8+Li4uKKiouMjf//////jZbx8f//////8fHx////8fHi4uLi4uLi4uLiioqKi4yLl//x8fH/////
        //Hx8f//8+Li4uLi4uLi4uLx////////8f////Hx8f/x////8fHi4uLi4uLi4uLi4vHx8fH////x////
        ////8fHx8f//8+Li4uLi4uLi4uLx//////Hx8fHx8f/////x////8fHi4uLi4uLi4uLi4vH////////x
        ////8fHx8fHx////8+Li4uLi4uLi4uLx////////8f/////////x///x8fHi4uLi4uLi4uLi4uzs7Ozs
        7Ozs7P//////8f//////8+Li4uLi4uLi4uLx8fHx8fHx7PHx7Ozs7Ozs7Ozs7Ozi4uLi4uLi4uLi4vHx
        8fHx8fHs8fHx8fHx7PHx8fHx8+Li4uLi4uLi4uLs7PHx8fHx7PHx8fHx8fHs8fHx8fHi4uLi4uLi4uLi
        4vHx7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs8+Li4uLi4uLi4uLx8fHx8fHx8fHx8fHx8fHs8fHx8fHi4uLi4uLi
        4uLi4vHx8fHx8fHx8fHx8fHx7PHx8fHx8+Li4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi
        4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi
        4uLi4uLi4uLi4v/////A////wAP//8AD///AAf//wAB//8AAH//AAAf/wAAB/8AAAH/AAAAfwAAAB8AA
        AAPAAAABwAAAAcAAAAP+AAAD/AAAB/wAAAf4AAAP+AAAD/AAAB/wAAAf4AAAP+AAAD/AAAB/wAAAf4AA
        AP+AAAD/wAAB////////////
</value>
  </data>
</root>